\<FORMATO\_PRD> <context>

# Overview

La plataforma SaaS de Trivia permite a equipos de marketing y agencias crear campañas de trivia gamificadas para captar leads e impulsar brand awareness, sin necesidad de código. Con una suscripción asequible, cada cliente obtiene su propio microsite o widget totalmente personalizable que combina entretenimiento con formularios de captura de datos y analíticas avanzadas.

**Problema**: la generación de leads online suele ser aburrida (pop‑ups, formularios estáticos). Los usuarios abandonan antes de completar.
**Solución**: trivias interactivas, de marca, que convierten mejor gracias a la mecánica lúdica.
**Audiencia**: marketers de pymes, agencias digitales, growth teams de startups, organizadores de eventos físicos/virtuales.

# Core Features

| Feature                     | Qué hace                                      | Por qué importa                    | Cómo funciona (alto nivel)                         |
| --------------------------- | --------------------------------------------- | ---------------------------------- | -------------------------------------------------- |
| Campaign Builder            | Crea, edita y gestiona trivias                | Permite lanzar campañas en minutos | Wizard WYSIWYG + IA que sugiere preguntas y diseño |
| Branding & Themes           | Personaliza colores, fuentes, layouts, assets | Refuerza identidad visual          | Motor de temas + Tailwind CSS vars                 |
| Question Bank               | Repositorio reutilizable + import CSV         | Ahorra tiempo, consistencia        | CRUD + etiquetas, búsqueda full‑text               |
| Lead Forms                  | Captura datos con lógica condicional          | Convierte jugadores en prospectos  | Constructor drag‑and‑drop, validación y webhooks   |
| Embeddable Widget & QR      | Publica en subdominio, iframe o QR            | Flexibilidad de distribución       | JS SDK + edge hosting                              |
| Real‑time Scoring & Ranking | Puntúa y muestra leaderboard                  | Aumenta engagement y share         | WebSocket (Upstash Redis)                          |
| Analytics Dashboard         | Métricas de participación y CPL               | Demuestra ROI                      | Postgres + Prisma + Recharts UI                    |
| Roles & Multi‑tenant        | Owner, Editor, Viewer; aislamiento            | Seguridad y colaboración           | RBAC + row‑level security                          |

# User Experience

**Personas**
*María* – Digital Marketer en una startup: busca captar 1 000 leads/mes, sin recursos de dev.
*Lucas* – Account Manager en agencia: gestiona campañas para varios clientes, necesita multicuenta.

**Flujos Clave**

1. *Onboarding*: signup → elige plantilla → importa preguntas → aplica branding → configura formulario → publish & share.
2. *Jugador*: accede por URL/QR → responde preguntas → ve puntuación → deja datos → comparte.

**UI/UX Consideraciones**

* Wizard lineal con autosave.
* Previsualización en vivo (desktop/mobile).
* Accesibilidad WCAG 2.2 AA.
* Gamificación sutil: confeti, barra de progreso.

  </context>

<PRD>
# Technical Architecture  
**Sistema (MVP simplificado)**  
- **Monorepo Next.js 15 (React 18 + TypeScript)** sobre **Vercel**; API Routes/Edge Functions hacen de BFF.  
- **Database**: **Vercel Postgres** (Neon) → acceso vía Prisma, row‑level security por tenant.  
- **Realtime**: **Upstash Redis** (Pub/Sub) para ranking en vivo y websockets (ws://edge).  
- **Auth**: **Auth0** (OIDC, RBAC) con callbacks alojados en Vercel.  
- **Media & Assets**: **Cloudflare Images** (o Vercel Blob cuando esté GA).  
- **Email/Notifications**: Resend API.  
- **Payments**: Stripe Billing.  
- **CI/CD**: GitHub → Vercel Preview/Prod; tests en GitHub Actions.  
- **Infra**: sin Terraform/K8s; variables y ambientes gestionados en el dashboard de Vercel.  

**Data Models**: Tenant, User, Campaign, Question, Lead, Theme, Event.

**APIs & Integraciones**

* GraphQL `/api/graphql` (Yoga) + REST `/api/*` (Next.js routes).
* Webhooks (Zapier/Make) via `/api/webhooks/*`.
* Unsplash API para imágenes.

# Development Roadmap

| Fase                               | Alcance detallado                                                                                                                               |
| ---------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------- |
| **Fase 0 – Setup & Deploy Base**   | Crear monorepo, conectar repo a Vercel, configurar entornos (Preview, Production), provisionar Vercel Postgres y Upstash Redis, integrar Auth0. |
| **Fase 1 – Core CRUD**             | Campaign & Question Bank CRUD (Prisma + tRPC/GraphQL), import CSV, tests unitarios.                                                             |
| **Fase 2 – Wizard Constructor**    | UI wizard con autosave (localStorage + API), motor de temas Tailwind.                                                                           |
| **Fase 3 – Lead Capture & Widget** | Form Builder drag‑and‑drop, validaciones, endpoint de leads, JS SDK embeddable, generación QR.                                                  |
| **Fase 4 – Game Runtime**          | Player runtime (React), timer, scoring, realtime ranking vía Upstash, persistencia en events table.                                             |
| **Fase 5 – Analytics Dashboard**   | Consultas agregadas en Postgres (materialized views) + Recharts, export CSV, email semanal Resend.                                              |
| **Fase 6 – Billing & Roles**       | Stripe subscriptions, RBAC UI, enforcement RLS.                                                                                                 |
| **Fase 7 – QA & Launch Beta**      | Cypress e2e, Lighthouse audits, hardening headers CSP, staged rollout.                                                                          |
| **Post‑MVP**                       | AI Design Copilot, Live Battle Mode, Mobile SDK, AR Trivia.                                                                                     |

# Logical Dependency Chain

1. **Setup Vercel + Auth0 + Database** (F0).
2. **Data Models & CRUD** (F1).
3. **Wizard / Branding** (F2) depende de CRUD.
4. **Lead Forms & Widget** (F3) depende de Wizard.
5. **Runtime** (F4) usa campañas y widget.
6. **Analytics** (F5) usa eventos del runtime.
7. **Billing/Roles** (F6) antes de abrir beta.
8. **QA & Launch** (F7) cierre MVP.

# Risks and Mitigations

| Riesgo                          | Impacto                 | Mitigación                                              |
| ------------------------------- | ----------------------- | ------------------------------------------------------- |
| Límite cold‑start Functions     | Latencia primera visita | Edge Functions cuando sea posible, warming ping         |
| Cuotas gratuitas Upstash/DB     | Downtime si se excede   | Plan pago early, alertas de cuota                       |
| Multitenancy en Vercel Postgres | Contención              | Connection pooling + row‑level security, shards futuros |
| Scope creep MVP                 | Retraso                 | Definición estricta de fases con Go/No‑Go semanal       |

# Appendix

* **Patrones Diseño**: Clean Arch modular dentro de monorepo, DDD light, tRPC/GraphQL.
* **CI Pipeline**: GitHub → tests → Vercel preview → review → merge → prod.
* **Seguridad**: JWT 15 min + refresh, rate‑limit middleware 100 r/m/IP, CSP strict‑dynamic, reCAPTCHA.
* **Competidores**: Kahoot!, Outgrow, Typeform Quiz, Gamify.
* **Especificaciones**: Esquema GraphQL/tRPC, Migrations SQL, diagrama ER, diagramas de secuencia clave.

  </PRD>

\</FORMATO\_PRD>
